{"ast":null,"code":"var _jsxFileName = \"/home/lusia/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/University-6-term/java/weather/frontend/src/components/WeatherApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeatherApp = () => {\n  _s();\n  const [service, setService] = useState('');\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchCityImage = async () => {\n      try {\n        var _data$hits$;\n        const response = await fetch(`/cityimage/${city}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch city image.');\n        }\n        const data = await response.json();\n        const imageUrl = (_data$hits$ = data.hits[0]) === null || _data$hits$ === void 0 ? void 0 : _data$hits$.webformatURL;\n        setWeather(prevState => ({\n          ...prevState,\n          imageUrl\n        }));\n        setError('');\n      } catch (error) {\n        console.error('Error fetching city image:', error);\n        setError('Error fetching city image. Please try again.');\n      }\n    };\n    if (city) {\n      fetchCityImage();\n    }\n  }, [city]);\n  const fetchWeather = async e => {\n    e.preventDefault();\n    if (!service || !city) {\n      setError('Please, fill in both service and city fields.');\n      return;\n    }\n    try {\n      const response = await fetch(`/weather/${service}/${city}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch weather data.');\n      }\n      const data = await response.json();\n      setWeather(data);\n      setError('');\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setError('Error fetching service or city data. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fetchWeather,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: service,\n        onChange: e => setService(e.target.value),\n        placeholder: \"Enter service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        placeholder: \"Enter city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weather.name || 'Unknown city'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), weather.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: weather.imageUrl,\n        alt: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weather.main ? weather.main.temp : 0, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weather.main ? weather.main.humidity : 0, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(WeatherApp, \"e+g5G/QRg4LLFUmc6NX5Uci/WLA=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherApp","_s","service","setService","city","setCity","weather","setWeather","error","setError","fetchCityImage","_data$hits$","response","fetch","ok","Error","data","json","imageUrl","hits","webformatURL","prevState","console","fetchWeather","e","preventDefault","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","name","src","alt","main","temp","humidity","_c","$RefreshReg$"],"sources":["/home/lusia/Документы/University-6-term/java/weather/frontend/src/components/WeatherApp.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst WeatherApp = () => {\n    const [service, setService] = useState('');\n    const [city, setCity] = useState('');\n    const [weather, setWeather] = useState(null);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        const fetchCityImage = async () => {\n            try {\n                const response = await fetch(`/cityimage/${city}`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch city image.');\n                }\n                const data = await response.json();\n                const imageUrl = data.hits[0]?.webformatURL;\n                setWeather(prevState => ({\n                    ...prevState,\n                    imageUrl\n                }));\n                setError('');\n            } catch (error) {\n                console.error('Error fetching city image:', error);\n                setError('Error fetching city image. Please try again.');\n            }\n        };\n\n        if (city) {\n            fetchCityImage();\n        }\n    }, [city]);\n\n    const fetchWeather = async (e) => {\n        e.preventDefault();\n\n        if (!service || !city) {\n            setError('Please, fill in both service and city fields.');\n            return;\n        }\n\n        try {\n            const response = await fetch(`/weather/${service}/${city}`);\n            if (!response.ok) {\n                throw new Error('Failed to fetch weather data.');\n            }\n            const data = await response.json();\n            setWeather(data);\n            setError('');\n        } catch (error) {\n            console.error('Error fetching weather data:', error);\n            setError('Error fetching service or city data. Please try again.');\n        }\n    };\n\n    return (\n        <>\n            <form onSubmit={fetchWeather}>\n                <input type=\"text\" value={service} onChange={(e) => setService(e.target.value)}\n                       placeholder=\"Enter service\"/>\n                <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)}\n                       placeholder=\"Enter city\"/>\n                <button type=\"submit\">Get Weather</button>\n            </form>\n            {error && <p>{error}</p>}\n            {weather && (\n                <div>\n                    <h2>{weather.name || 'Unknown city'}</h2>\n                    {weather.imageUrl && <img src={weather.imageUrl} alt=\"City\" />}\n                    <p>Temperature: {weather.main ? weather.main.temp : 0} °C</p>\n                    <p>Humidity: {weather.main ? weather.main.humidity : 0}%</p>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default WeatherApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}