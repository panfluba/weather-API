{"ast":null,"code":"var _jsxFileName = \"/home/lusia/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/University-6-term/java/weather/frontend/src/components/WeatherApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeatherApp = () => {\n  _s();\n  const [service, setService] = useState('');\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Функция для загрузки изображения при монтировании компонента\n    const loadCityImage = async () => {\n      try {\n        if (weather && weather.imageUrl) {\n          const response = await fetch(weather.imageUrl);\n          if (response.ok) {\n            // Преобразуем ответ в Blob и создаем URL для изображения\n            const blob = await response.blob();\n            const imageUrl = URL.createObjectURL(blob);\n            setWeather(prevWeather => ({\n              ...prevWeather,\n              imageUrl\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('Error loading city image:', error);\n      }\n    };\n    loadCityImage();\n\n    // Очистка URL изображения при размонтировании компонента\n    return () => {\n      if (weather && weather.imageUrl) {\n        URL.revokeObjectURL(weather.imageUrl);\n      }\n    };\n  }, [weather]);\n  const fetchWeather = async e => {\n    e.preventDefault();\n    if (!service || !city) {\n      setError('Please, fill in both service and city fields.');\n      return;\n    }\n    try {\n      const response = await fetch(`/weather/${service}/${city}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch weather data.');\n      }\n      const data = await response.json();\n      setWeather(data);\n      setError('');\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setError('Error fetching service or city data. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fetchWeather,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: service,\n        onChange: e => setService(e.target.value),\n        placeholder: \"Enter service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        placeholder: \"Enter city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weather.name || 'Unknown city'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), weather.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: weather.imageUrl,\n        alt: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weather.main ? weather.main.temp : 0, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weather.main ? weather.main.humidity : 0, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(WeatherApp, \"e+g5G/QRg4LLFUmc6NX5Uci/WLA=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherApp","_s","service","setService","city","setCity","weather","setWeather","error","setError","loadCityImage","imageUrl","response","fetch","ok","blob","URL","createObjectURL","prevWeather","console","revokeObjectURL","fetchWeather","e","preventDefault","Error","data","json","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","name","src","alt","main","temp","humidity","_c","$RefreshReg$"],"sources":["/home/lusia/Документы/University-6-term/java/weather/frontend/src/components/WeatherApp.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst WeatherApp = () => {\n    const [service, setService] = useState('');\n    const [city, setCity] = useState('');\n    const [weather, setWeather] = useState(null);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        // Функция для загрузки изображения при монтировании компонента\n        const loadCityImage = async () => {\n            try {\n                if (weather && weather.imageUrl) {\n                    const response = await fetch(weather.imageUrl);\n                    if (response.ok) {\n                        // Преобразуем ответ в Blob и создаем URL для изображения\n                        const blob = await response.blob();\n                        const imageUrl = URL.createObjectURL(blob);\n                        setWeather(prevWeather => ({ ...prevWeather, imageUrl }));\n                    }\n                }\n            } catch (error) {\n                console.error('Error loading city image:', error);\n            }\n        };\n\n        loadCityImage();\n\n        // Очистка URL изображения при размонтировании компонента\n        return () => {\n            if (weather && weather.imageUrl) {\n                URL.revokeObjectURL(weather.imageUrl);\n            }\n        };\n    }, [weather]);\n\n    const fetchWeather = async (e) => {\n        e.preventDefault();\n\n        if (!service || !city) {\n            setError('Please, fill in both service and city fields.');\n            return;\n        }\n\n        try {\n            const response = await fetch(`/weather/${service}/${city}`);\n            if (!response.ok) {\n                throw new Error('Failed to fetch weather data.');\n            }\n            const data = await response.json();\n            setWeather(data);\n            setError('');\n        } catch (error) {\n            console.error('Error fetching weather data:', error);\n            setError('Error fetching service or city data. Please try again.');\n        }\n    };\n\n    return (\n        <>\n            <form onSubmit={fetchWeather}>\n                <input type=\"text\" value={service} onChange={(e) => setService(e.target.value)}\n                       placeholder=\"Enter service\"/>\n                <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)}\n                       placeholder=\"Enter city\"/>\n                <button type=\"submit\">Get Weather</button>\n            </form>\n            {error && <p>{error}</p>}\n            {weather && (\n                <div>\n                    <h2>{weather.name || 'Unknown city'}</h2>\n                    {weather.imageUrl && <img src={weather.imageUrl} alt=\"City\" />}\n                    <p>Temperature: {weather.main ? weather.main.temp : 0} °C</p>\n                    <p>Humidity: {weather.main ? weather.main.humidity : 0}%</p>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default WeatherApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}